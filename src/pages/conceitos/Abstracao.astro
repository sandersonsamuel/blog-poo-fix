---
import CodeBlock from "../../components/CodeBlock.astro";
---

<div class="mt-5">
    <h1 class="text-5xl mb-3 font-semibold bg-gradient-to-br from-[#fb923c] via-[#f97316] to-[#ea580c] dark:from-primary-main dark:via-primary-main dark:to-primary-main bg-clip-text text-transparent">
        5. Abstração
    </h1>

    <p>A abstração é um dos princípios fundamentais da POO e consiste em focar nos aspectos essenciais de um objeto, ignorando detalhes irrelevantes de sua implementação. Isso promove a simplificação e a compreensão do sistema.</p>

    <h1 class="mt-5 text-xl font-semibold bg-gradient-to-br from-[#fb923c] via-[#f97316] to-[#ea580c] dark:from-primary-main dark:via-primary-main dark:to-primary-main bg-clip-text text-transparent">
        Como funciona a abstração?
    </h1>

    <p>Na abstração, os detalhes de implementação de um objeto são ocultados, expondo apenas os métodos e atributos relevantes para sua interação com o sistema. Isso permite que os desenvolvedores foquem na funcionalidade do objeto sem se preocupar com sua implementação interna.</p>

    <img class="mt-3" src="">

    <h3 class="mt-3 font-bold">Exemplo:</h3>

    <CodeBlock language="java" content={`
    // Exemplo de classe abstrata
    public abstract class Forma {
        // Método abstrato para calcular área
        public abstract double calcularArea();
    }
    `}/>

    <p>Neste exemplo, a classe "Forma" é abstrata e define um método abstrato "calcularArea()". As subclasses dessa classe podem implementar esse método de acordo com o tipo específico de forma geométrica, como quadrado, círculo, etc.</p>

</div>
